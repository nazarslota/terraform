name: Deploy to GKE

on:
  push:
    branches:
      - master

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-service-account-key.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/jurny-rider-backend:${{ github.sha }}, gcr.io/${{ secrets.GCP_PROJECT_ID }}/jurny-rider-backend:latest
          build-args: |
            --build-arg GITHUB_SHA=${{ github.sha }}
            --build-arg GITHUB_REF=${{ github.ref }}
            --build-arg GITHUB_REPOSITORY=${{ github.repository }}
          context: .
          file: ./deployments/dockerfiles/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  infrastructure:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deployments/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Google Cloud credentials
        run: echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > $GOOGLE_APPLICATION_CREDENTIALS

      - name: Terraform initialize
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve

  deploy:
    needs: infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Configure kubectl
        run: gcloud container clusters get-credentials unotes-000-gke --zone us-east4-a --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Kubernetes
        run: kubectl apply -f ${{ env.K8S_DEPLOYMENT_FILE }}
